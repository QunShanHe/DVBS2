-- -------------------------------------------------------------
-- 
-- File Name: /home/wardo/Documents/Matlab Projects/Cosimulation and FPGA in the loop tutorial/codegen/mlhdlc_sysobj_ex/hdlsrc/mlhdlc_sysobj_ex_fixpt.vhd
-- Created: 2020-11-29 17:09:39
-- 
-- Generated by MATLAB 9.9, MATLAB Coder 5.1 and HDL Coder 3.17
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- y_out                         ce_out        1
-- delayed_xout                  ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mlhdlc_sysobj_ex_fixpt
-- Source Path: mlhdlc_sysobj_ex_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mlhdlc_sysobj_ex_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        x_in                              :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        h_in1                             :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En15
        h_in2                             :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En16
        h_in3                             :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En16
        h_in4                             :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En15
        ce_out                            :   OUT   std_logic;
        y_out                             :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        delayed_xout                      :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_En12
        );
END mlhdlc_sysobj_ex_fixpt;


ARCHITECTURE rtl OF mlhdlc_sysobj_ex_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL h_in1_signed                     : signed(13 DOWNTO 0);  -- sfix14_En15
  SIGNAL x_in_signed                      : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL varargout_1                      : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL varargout_1_1                    : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL varargout_1_2                    : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL varargout_1_3                    : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL varargout_1_4                    : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL varargout_1_5                    : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL varargout_1_6                    : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL varargout_1_7                    : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL h_in2_signed                     : signed(13 DOWNTO 0);  -- sfix14_En16
  SIGNAL h_in3_unsigned                   : unsigned(13 DOWNTO 0);  -- ufix14_En16
  SIGNAL h_in4_unsigned                   : unsigned(13 DOWNTO 0);  -- ufix14_En15
  SIGNAL a1                               : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL m1                               : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL p25m1_mul_temp                   : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL a2                               : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL m2                               : signed(13 DOWNTO 0);  -- sfix14_En15
  SIGNAL p26m2_mul_temp                   : signed(27 DOWNTO 0);  -- sfix28_En28
  SIGNAL a5                               : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL p29a5_add_cast                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL p29a5_add_cast_1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL p29a5_add_temp                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL a3                               : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL m3                               : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL p27m3_cast                       : signed(14 DOWNTO 0);  -- sfix15_En16
  SIGNAL p27m3_mul_temp                   : signed(28 DOWNTO 0);  -- sfix29_En28
  SIGNAL p27m3_cast_1                     : signed(27 DOWNTO 0);  -- sfix28_En28
  SIGNAL a4                               : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL p24a4_add_cast                   : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL p24a4_add_cast_1                 : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL p24a4_add_temp                   : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL m4                               : signed(13 DOWNTO 0);  -- sfix14_En13
  SIGNAL p28m4_cast                       : signed(14 DOWNTO 0);  -- sfix15_En15
  SIGNAL p28m4_mul_temp                   : signed(28 DOWNTO 0);  -- sfix29_En26
  SIGNAL p28m4_cast_1                     : signed(27 DOWNTO 0);  -- sfix28_En26
  SIGNAL a6                               : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL p30a6_add_cast                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL p30a6_add_cast_1                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL p30a6_add_temp                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL y_out_tmp                        : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL p31y_out_add_cast                : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL p31y_out_add_cast_1              : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL p31y_out_add_temp                : signed(16 DOWNTO 0);  -- sfix17_En14

BEGIN
  h_in1_signed <= signed(h_in1);

  x_in_signed <= signed(x_in);

  enb <= clk_enable;

  h1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      varargout_1 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        varargout_1 <= x_in_signed;
      END IF;
    END IF;
  END PROCESS h1_process;


  h2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      varargout_1_1 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        varargout_1_1 <= varargout_1;
      END IF;
    END IF;
  END PROCESS h2_process;


  h3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      varargout_1_2 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        varargout_1_2 <= varargout_1_1;
      END IF;
    END IF;
  END PROCESS h3_process;


  h4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      varargout_1_3 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        varargout_1_3 <= varargout_1_2;
      END IF;
    END IF;
  END PROCESS h4_process;


  h5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      varargout_1_4 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        varargout_1_4 <= varargout_1_3;
      END IF;
    END IF;
  END PROCESS h5_process;


  h6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      varargout_1_5 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        varargout_1_5 <= varargout_1_4;
      END IF;
    END IF;
  END PROCESS h6_process;


  h7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      varargout_1_6 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        varargout_1_6 <= varargout_1_5;
      END IF;
    END IF;
  END PROCESS h7_process;


  -- delayout input signal
  h8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      varargout_1_7 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        varargout_1_7 <= varargout_1_6;
      END IF;
    END IF;
  END PROCESS h8_process;


  h_in2_signed <= signed(h_in2);

  h_in3_unsigned <= unsigned(h_in3);

  h_in4_unsigned <= unsigned(h_in4);

  a1 <= varargout_1 + varargout_1_7;

  p25m1_mul_temp <= h_in1_signed * a1;
  m1 <= p25m1_mul_temp(26 DOWNTO 13);

  a2 <= varargout_1_1 + varargout_1_6;

  p26m2_mul_temp <= h_in2_signed * a2;
  m2 <= p26m2_mul_temp(26 DOWNTO 13);

  p29a5_add_cast <= resize(m1 & '0', 16);
  p29a5_add_cast_1 <= resize(m2, 16);
  p29a5_add_temp <= p29a5_add_cast + p29a5_add_cast_1;
  a5 <= p29a5_add_temp(14 DOWNTO 1);

  a3 <= varargout_1_2 + varargout_1_5;

  p27m3_cast <= signed(resize(h_in3_unsigned, 15));
  p27m3_mul_temp <= p27m3_cast * a3;
  p27m3_cast_1 <= p27m3_mul_temp(27 DOWNTO 0);
  m3 <= p27m3_cast_1(27 DOWNTO 14);

  p24a4_add_cast <= resize(varargout_1_3, 15);
  p24a4_add_cast_1 <= resize(varargout_1_4, 15);
  p24a4_add_temp <= p24a4_add_cast + p24a4_add_cast_1;
  a4 <= p24a4_add_temp(14 DOWNTO 1);

  p28m4_cast <= signed(resize(h_in4_unsigned, 15));
  p28m4_mul_temp <= p28m4_cast * a4;
  p28m4_cast_1 <= p28m4_mul_temp(27 DOWNTO 0);
  m4 <= p28m4_cast_1(26 DOWNTO 13);

  p30a6_add_cast <= resize(m3, 16);
  p30a6_add_cast_1 <= resize(m4 & '0', 16);
  p30a6_add_temp <= p30a6_add_cast + p30a6_add_cast_1;
  a6 <= p30a6_add_temp(15 DOWNTO 2);

  -- filtered output
  p31y_out_add_cast <= resize(a5, 17);
  p31y_out_add_cast_1 <= resize(a6 & '0' & '0', 17);
  p31y_out_add_temp <= p31y_out_add_cast + p31y_out_add_cast_1;
  y_out_tmp <= p31y_out_add_temp(15 DOWNTO 2);

  y_out <= std_logic_vector(y_out_tmp);

  delayed_xout <= std_logic_vector(varargout_1_7);

  ce_out <= clk_enable;

END rtl;

