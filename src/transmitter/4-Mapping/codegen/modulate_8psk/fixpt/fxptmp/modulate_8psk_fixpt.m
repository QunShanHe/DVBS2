%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%           Generated by MATLAB 9.9 and Fixed-Point Designer 7.1           %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
function [I, Q] = modulate_8psk_fixpt(input_bits, A)
% 8psk_modulate Maps the bits in a stream of bits to an array of complex
% symbols following an 16APSK modulation scheme.
% @arg input_bit: Must be a vector with only 3 bits. The first
%               bit has to be the most significant bit (MSB).
% @arg A: The amplitude of the desired symbols.
    fm = get_fimath();

    phase = fi(0, 0, 9, 0, fm); % Start at phase 0
    if(input_bits(1)==fi(0, 0, 1, 0, fm) && input_bits(2)==fi(0, 0, 1, 0, fm) && input_bits(3)==fi(1, 0, 1, 0, fm))
        phase(:)=0;
    elseif(input_bits(1)==fi(0, 0, 1, 0, fm) && input_bits(2)==fi(0, 0, 1, 0, fm) && input_bits(3)==fi(0, 0, 1, 0, fm))
        phase(:)=45;
    elseif(input_bits(1)==fi(1, 0, 1, 0, fm) && input_bits(2)==fi(0, 0, 1, 0, fm) && input_bits(3)==fi(0, 0, 1, 0, fm))
        phase(:)=90;
    elseif(input_bits(1)==fi(1, 0, 1, 0, fm) && input_bits(2)==fi(1, 0, 1, 0, fm) && input_bits(3)==fi(0, 0, 1, 0, fm))
        phase(:)=135;
    elseif(input_bits(1)==fi(0, 0, 1, 0, fm) && input_bits(2)==fi(1, 0, 1, 0, fm) && input_bits(3)==fi(0, 0, 1, 0, fm))
        phase(:)=180;
    elseif(input_bits(1)==fi(0, 0, 1, 0, fm) && input_bits(2)==fi(1, 0, 1, 0, fm) && input_bits(3)==fi(1, 0, 1, 0, fm))
        phase(:)=225;
    elseif(input_bits(1)==fi(1, 0, 1, 0, fm) && input_bits(2)==fi(1, 0, 1, 0, fm) && input_bits(3)==fi(1, 0, 1, 0, fm))
        phase(:)=270;
    elseif(input_bits(1)==fi(1, 0, 1, 0, fm) && input_bits(2)==fi(0, 0, 1, 0, fm) && input_bits(3)==fi(1, 0, 1, 0, fm))
        phase(:)=315;
    end
    I = fi(A*cos(phase*fi(pi, 0, 14, 12, fm)*fi(1/180, 0, 14, 21, fm)), 1, 14, 10, fm);
    Q = fi(A*sin(phase*fi(pi, 0, 14, 12, fm)*fi(1/180, 0, 14, 21, fm)), 1, 14, 10, fm);
end


function fm = get_fimath()
	fm = fimath('RoundingMethod', 'Floor',...
	     'OverflowAction', 'Wrap',...
	     'ProductMode','FullPrecision',...
	     'MaxProductWordLength', 128,...
	     'SumMode','FullPrecision',...
	     'MaxSumWordLength', 128);
end
