-- -------------------------------------------------------------
-- 
-- File Name: /Users/wardo/Desktop/Drawer/TelecomThesis/DVB-S2/src/transmitter/3-FEC/codegen/bch_lfsr_encode/hdlsrc/bch_lfsr_encode_fixpt.vhd
-- Created: 2020-10-19 20:03:15
-- 
-- Generated by MATLAB 9.9, MATLAB Coder 5.1 and HDL Coder 3.17
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: bch_lfsr_encode_fixpt
-- Source Path: bch_lfsr_encode_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.bch_lfsr_encode_fixpt_pkg.ALL;

ENTITY bch_lfsr_encode_fixpt IS
  PORT( generator                         :   IN    std_logic_vector(0 TO 192);  -- ufix1 [193]
        message                           :   IN    std_logic_vector(0 TO 48407);  -- ufix1 [48408]
        codeword                          :   OUT   std_logic_vector(0 TO 48599)  -- ufix1 [48600]
        );
END bch_lfsr_encode_fixpt;


ARCHITECTURE rtl OF bch_lfsr_encode_fixpt IS

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


BEGIN
  bch_lfsr_encode_fixpt_1_output : PROCESS (generator, message)
    VARIABLE state_registers : std_logic_vector(0 TO 191);
    VARIABLE s : signed(10 DOWNTO 0);
    VARIABLE state_registers_0 : std_logic_vector(0 TO 191);
    VARIABLE add_temp : vector_of_signed32(0 TO 48407);
    VARIABLE sub_cast : vector_of_unsigned16(0 TO 48407);
    VARIABLE sub_cast_0 : vector_of_signed32(0 TO 48407);
    VARIABLE add_temp_0 : vector_of_signed32(0 TO 190);
  BEGIN
    s := to_signed(16#000#, 11);
    --HDL code generation from MATLAB function: bch_lfsr_encode_fixpt
    -- First state is: input xor generator(1)
    -- state(s-1) xor generator_polinomial
    -- Each state will be the result of:
    -- Compute xor flag
    -- Update the states in the LFSR
    -- Compute the output of the LFSR
    -- For all bits in message
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --                                                                          %
    --           Generated by MATLAB 9.9 and Fixed-Point Designer 7.1           %
    --                                                                          %
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    -- Length of message
    -- Length of generator polynomial
    -- Internal states of the LFSR
    state_registers := (OTHERS => '0');

    FOR i IN 0 TO 48407 LOOP
      state_registers_0 := state_registers;

      FOR s_0 IN 0 TO 190 LOOP
        add_temp_0(s_0) := to_signed(s_0 + 1, 32);
        s := add_temp_0(s_0)(10 DOWNTO 0);
        state_registers_0(to_integer(resize(s, 32) - 1)) := hdlcoder_to_stdlogic((state_registers_0(to_integer(resize(resize(s, 13) + to_signed(16#0001#, 13), 32) - 1)) /= '0') /= ((state_registers(0) /= '0') AND (generator(to_integer(resize(resize(s, 13) + to_signed(16#0001#, 13), 32) - 1)) /= '0')));
      END LOOP;

      add_temp(i) := to_signed(i + 1, 32);
      sub_cast(i) := unsigned(add_temp(i)(15 DOWNTO 0));
      sub_cast_0(i) := signed(resize(sub_cast(i), 32));
      state_registers_0(191) := hdlcoder_to_stdlogic((message(to_integer(sub_cast_0(i) - 1)) /= '0') /= ((state_registers(0) /= '0') AND (generator(0) /= '0')));
      state_registers := state_registers_0;
      codeword(i) <= message(i);
    END LOOP;

    codeword(48408 TO 48599) <= state_registers(0 TO 191);
  END PROCESS bch_lfsr_encode_fixpt_1_output;


END rtl;

