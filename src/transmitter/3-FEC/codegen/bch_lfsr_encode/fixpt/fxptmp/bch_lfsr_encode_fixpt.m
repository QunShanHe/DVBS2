%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%           Generated by MATLAB 9.9 and Fixed-Point Designer 7.1           %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
function codeword = bch_lfsr_encode_fixpt(generator, message)

    fm = get_fimath();

    k = fi(length(message), 0, 16, 0, fm); % Length of message
    g = fi(length(generator) - 1, 0, 8, 0, fm); % Length of generator polynomial
    state_registers = fi(zeros(fi_toint(g), 1), 0, 1, 0, fm); % Internal states of the LFSR
    
    for i = fi(1, 0, 1, 0, fm):k % For all bits in message
        % Compute the output of the LFSR
        output = fi(state_registers(1), 0, 1, 0, fm);
        % Update the states in the LFSR
        for s = fi(1, 0, 1, 0, fm):fi_signed(g)-fi(1, 0, 1, 0, fm)
            % Compute xor flag
            flag = and(fi_toint(output), fi_toint(generator(s+fi(1, 0, 1, 0, fm))));
            % Each state will be the result of:
            % state(s-1) xor generator_polinomial
            state_registers(s) = xor(state_registers(s+fi(1, 0, 1, 0, fm)), flag);
        end
        % First state is: input xor generator(1)
        state_registers(g) = xor(message(i), and(fi_toint(output), fi_toint(generator(1))));
    end
    
    codeword = fi([fi(message, 0, 1, 0, fm); state_registers], 0, 1, 0, fm);
end



function y = fi_signed(a)
    coder.inline( 'always' );
    if isfi( a ) && ~(issigned( a ))
        nt = numerictype( a );
        new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
        y = fi( a, new_nt, fimath( a ) );
    else
        y = a;
    end
end


function y = fi_toint(u)
    coder.inline( 'always' );
    if isfi( u )
        nt = numerictype( u );
        s = nt.SignednessBool;
        wl = nt.WordLength;
        y = int32( fi( u, s, wl, 0, hdlfimath ) );
    else
        y = int32( u );
    end
end

function fm = get_fimath()
	fm = fimath('RoundingMethod', 'Floor',...
	     'OverflowAction', 'Wrap',...
	     'ProductMode','FullPrecision',...
	     'MaxProductWordLength', 128,...
	     'SumMode','FullPrecision',...
	     'MaxSumWordLength', 128);
end
